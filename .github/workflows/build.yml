name: Build Tauri App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-macos:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./tauri-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install node
          brew install rustup
          rustup-init -y
          source $HOME/.cargo/env
          rustup target add aarch64-apple-darwin
          npm install

      - name: Cache Rust Dependencies
        uses: swatinem/rust-cache@v2

      - name: Build Tauri app (macOS)
        run: npm run tauri build -- --bundles app

      - name: Code Sign App
        run: |
          codesign --deep --force --verbose --sign - src-tauri/target/release/bundle/macos/tauri-app.app

      - name: Create Signed ZIP
        run: |
          ditto -c -k --keepParent src-tauri/target/release/bundle/macos/tauri-app.app src-tauri/target/release/tauri-app-macos.zip

      - name: Upload macOS build artifact
        uses: actions/upload-artifact@v4
        with:
          name: tauri-macos
          path: ${{ github.workspace }}/tauri-app/src-tauri/target/release/tauri-app-macos.zip

  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./tauri-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        shell: bash
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Add Cargo to PATH
        shell: bash
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: |
          choco install -y nodejs 7zip
          rustup default stable
          rustup target add x86_64-pc-windows-msvc
          refreshenv
          npm install

      - name: Cache Rust Dependencies
        uses: swatinem/rust-cache@v2

      - name: Build Tauri app (Windows)
        run: npm run tauri build 

      - name: Compress Windows Executable
        run: 7z a -tzip src-tauri/target/release/tauri-app-windows.zip src-tauri/target/release/bundle/nsis/tauri-app_0.1.0_x64-setup.exe

      - name: Upload Windows build artifact
        uses: actions/upload-artifact@v4
        with:
          name: tauri-windows
          path: src-tauri/target/release/tauri-app-windows.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: tauri-macos
          path: ./

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: tauri-windows
          path: ./

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            tauri-app-macos.zip
            tauri-app-windows.zip
          tag_name: ${{ github.ref_name }}
          name: "Tauri Release ${{ github.ref_name }}"
          body: "Download the latest Tauri build for macOS & Windows."
          draft: false
          prerelease: false
